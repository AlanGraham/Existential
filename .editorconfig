# See http://editorconfig.org/ for more details of this file's format.
# Has had conflicts with ReSharper, but this should be fixed: https://youtrack.jetbrains.com/issue/RSRP-461746
# Supported options: 
#   https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
#   https://github.com/madskristensen/EditorConfigLanguage/issues/10#issuecomment-310120306
# Based on:
#   https://github.com/RehanSaeed/EditorConfig/blob/master/.editorconfig

# top-most EditorConfig file
root = true
# All files
[*]
charset = utf-8-bom
end_of_line = crlf
indent_style = space
indent_size = 4
tab_width = unset
insert_final_newline = false
trim_trailing_whitespace = true

# Visual Studio solution
[*.sln]
charset = utf-8-bom
indent_style = tab

# Visual Studio project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Configuration files
[*.{json,xml,config,nuspec,props,resx,ruleset,targets,vsct,vsixmanifest,yml}]
indent_size = 2

# Markdown files
[*.md]
trim_trailing_whitespace = false

# Web files
[*.{htm,html,js,ts,css,scss,less}]
insert_final_newline = true

# HTML files
[*.{html,html}]
indent_size = 2

# JavaScript files
[*{js,ts}]

# CSS files
#[*.{css,scss,less}]
#indent_size = 2

# Visual Basic
#[*.{vb,vbx}]
#visual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverride,Overloads,Overrides,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,Widening,Narrowing,Custom,Async:suggestion:suggestion

# System script files
#[*.{sh,ps1,psm1}]

# Bash Files
# We don't have any bash files, but the end_of_line preference is important enough to keep as documentation just in case.
#[*.sh]
#end_of_line = lf

# Dotnet Code Style Settings
# See https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
# See http://kent-boogaart.com/blog/editorconfig-reference-for-c-developers
[*.{cs,csx,cake,vb,vbx}]

# File headers
dotnet_separate_import_directive_groups = true

# Enable cross-assembly checking of Code Analysis CA1062
# https://github.com/dotnet/roslyn/issues/35104
# https://github.com/dotnet/roslyn-analyzers/blob/master/docs/Analyzer%20Configuration.md#null-check-validation-methods
dotnet_code_qualityRe.null_check_validation_methods = ThrowIfNull|ThrowIfNullOrEmpty|ThrowIfNullOrWhiteSpace|ToMaybe|Some|Existential.Maybe``.op_Implicit(``)~Existential.Maybe``

# Restrict FxCop analyzer to checking only public and protected interfaces for Design issues.
dotnet_code_quality.Design.api_surface = public, protected

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:error
dotnet_style_readonly_field = true:error

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = always_for_clarity:suggestion

# Suggest more modern expression-level preferences when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

# Suggest "Null" checking preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion

# Analyzer settings
dotnet_analyzer_diagnostic.severity = error
dotnet_analyzer_diagnostic.category-<category>.severity = unset
dotnet_diagnostic.<rule_id>.severity = unset
dotnet_diagnostic.SA1101.severity = none
# SA1135: Using directives should be qualified
dotnet_diagnostic.SA1135.severity = none


# C# Code Style Settings
# See https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
# See http://kent-boogaart.com/blog/editorconfig-reference-for-c-developers
[*.{cs,cshtml,csx,cake}]

# File headers.
csharp_using_directive_placement = inside_namespace:suggestion
file_header_template = <copyright file="{fileName}" company="Gavin Greig">\n  Copyright (c) Dr. Gavin T.D. Greig, 2020.\n</copyright>

# Require curly braces even for one line of code
csharp_prefer_braces = true:error

# Prefer "var" only when the type appears explicitly on the right hand side of an assignment.
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Prefer method-like and property-like constructs to have a block body
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion

# Suggest more modern pattern matching features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Inlined variable declarations
csharp_style_inlined_variable_declaration = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = false:suggestion
csharp_prefer_simple_using_statement = false:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion

# "Null" checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Gavin Greig's Anthropomorphic Hungarian const field naming style
dotnet_naming_rule.GavinGreig_const_field_naming.symbols = GavinGreig_const_field_naming_symbols
dotnet_naming_rule.GavinGreig_const_field_naming.severity = warning
dotnet_naming_symbols.GavinGreig_const_field_naming_symbols.required_modifiers = const
dotnet_naming_symbols.GavinGreig_const_field_naming_symbols.applicable_kinds = field
dotnet_naming_style.GavinGreig_const_field_naming_style.capitalization = pascal_case
dotnet_naming_rule.GavinGreig_const_field_naming.style = GavinGreig_const_field_naming_style

# Gavin Greig's Anthropomorphic Hungarian static field naming style
dotnet_naming_rule.GavinGreig_static_field_naming.symbols = GavinGreig_static_field_naming_symbols
dotnet_naming_rule.GavinGreig_static_field_naming.severity = warning
dotnet_naming_symbols.GavinGreig_static_field_naming_symbols.required_modifiers = static
dotnet_naming_symbols.GavinGreig_static_field_naming_symbols.applicable_kinds = field
dotnet_naming_style.GavinGreig_static_field_naming_style.capitalization = pascal_case
dotnet_naming_rule.GavinGreig_static_field_naming.style = GavinGreig_static_field_naming_style

# Gavin Greig's Anthropomorphic Hungarian readonly field naming style
#dotnet_naming_rule.GavinGreig_readonly_field_naming.symbols = GavinGreig_readonly_field_naming_symbols
#dotnet_naming_rule.GavinGreig_readonly_field_naming.severity = warning
#dotnet_naming_symbols.GavinGreig_readonly_field_naming_symbols.required_modifiers = readonly
#dotnet_naming_symbols.GavinGreig_readonly_field_naming_symbols.applicable_kinds = field
#dotnet_naming_style.GavinGreig_readonly_field_naming_style.capitalization = pascal_case
#dotnet_naming_rule.GavinGreig_readonly_field_naming.style = GavinGreig_readonly_field_naming_style
# Turned out to clash with StyleCop.

# Gavin Greig's Anthropomorphic Hungarian field naming style
dotnet_naming_rule.GavinGreig_field_naming.symbols = GavinGreig_field_naming_symbols
dotnet_naming_rule.GavinGreig_field_naming.severity = warning
dotnet_naming_symbols.GavinGreig_field_naming_symbols.applicable_kinds = field
dotnet_naming_style.GavinGreig_field_naming_style.required_prefix = my
dotnet_naming_style.GavinGreig_field_naming_style.capitalization = pascal_case
dotnet_naming_rule.GavinGreig_field_naming.style = GavinGreig_field_naming_style

# StyleCop 4.5 SA1302: InterfaceNamesMustBeginWithI
# A violation of this rule occurs when the name of an interface does not begin with the capital letter I.
dotnet_naming_style.sa1302_style.capitalization = first_word_upper
dotnet_naming_style.sa1302_style.required_prefix = I
dotnet_naming_symbols.sa1302_symbols.applicable_kinds = interface
dotnet_naming_symbols.sa1302_symbols.applicable_accessibilities = *
dotnet_naming_rule.sa1302.severity = warning
dotnet_naming_rule.sa1302.symbols = sa1302_symbols
dotnet_naming_rule.sa1302.style = sa1302_style

# StyleCop 4.5 SA1303: ConstFieldNamesMustBeginWithUpperCaseLetter
# A violation of this rule occurs when the name of a field marked with the const attribute does not begin with an upper-case letter.
dotnet_naming_style.sa1303_style.capitalization = first_word_upper
dotnet_naming_symbols.sa1303_symbols.applicable_kinds = field
dotnet_naming_symbols.sa1303_symbols.applicable_accessibilities = *
dotnet_naming_symbols.sa1303_symbols.required_modifiers = const
dotnet_naming_rule.sa1303.severity = warning
dotnet_naming_rule.sa1303.symbols = sa1303_symbols
dotnet_naming_rule.sa1303.style = sa1303_style

# Newline settings:
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation settings
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# Reduced strictness of checking for test projects.
[*Test*.{cs,csx,vb,vbx}]

# Permit underlines
dotnet_diagnostic.CA1303.severity = none

# Permit ignoring return values - particularly common when testing for throws.
dotnet_diagnostic.IDE0058.severity = none

# Tests don't require doc comments.
dotnet_diagnostic.SA1600.severity = none
